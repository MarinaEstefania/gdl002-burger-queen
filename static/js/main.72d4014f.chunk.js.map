{"version":3,"sources":["components/Navbar.js","components/Firebase/firebase.js","components/SendToKitchen.js","components/Total.js","components/DeleteTicketItem.js","components/Ticket.js","components/Waitress.js","components/DinnerMenu.js","components/Kitchen.js","App.js","components/pruebasfirebase.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","react_router_dom","to","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","appId","SendToKitchen","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sendOrder","bind","assertThisInitialized","database","ref","child","push","orden","date","Date","getTime","onClick","Total","state","totalCount","price","console","log","order","map","item","total","Ticket","newTicket","className","deleteItem","id","components_Total","components_SendToKitchen","Waitress","chooseMenu","menu","setState","menuSelected","on","snap","menuButtons","val","value","orderIndex","findIndex","concat","toConsumableArray","slice","length","morning","dinner","submitItem","_this2","img","newItem","_this3","menuBtn","menuItem","key","type","components_Ticket","DinnerMenu","Kitchen","OrdersLikeArray","snapshot","returnArr","forEach","childSnapshot","snapshotToArray","remove","Array","isArray","orders","i","class","items","delete","App","react_router","path","component","exact","strict","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.72d4014f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Navigation extends Component{\r\n    render(){\r\n        return(\r\n            <div >\r\n                 <nav>\r\n                <button ><Link  to=\"Meseros\">Meseros</Link></button>{/* \r\n                <button  ><Link  to=\"MenuComida\">Comidas</Link></button> */}\r\n                <button  ><Link  to=\"Cocina\">Cocina</Link></button>\r\n                </nav>\r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import firebase from 'firebase';\r\n\r\n//Web app's Firebase configuration\r\n const firebaseConfig = {\r\n    apiKey: \"AIzaSyB_yVvrnR9-W9DbbxVi2yx53O49jL4wPaM\",\r\n    authDomain: \"burger-queen-gdl002.firebaseapp.com\",\r\n    databaseURL: \"https://burger-queen-gdl002.firebaseio.com\",\r\n    projectId: \"burger-queen-gdl002\",\r\n/*     storageBucket: \"burger-queen-gdl002.appspot.com\",\r\n    messagingSenderId: \"14744371401\", */\r\n    appId: \"1:14744371401:web:b161951d0904c8ce\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export default firebase;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport firebase from './Firebase/firebase';\r\n\r\nclass SendToKitchen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.sendOrder = this.sendOrder.bind(this)\r\n    }\r\n\r\n    sendOrder() {\r\n        const dbRefOrder = firebase.database().ref();\r\n        const orderRef = dbRefOrder.child('order');\r\n        orderRef.push([\r\n            {\r\n                orden: this.props.SendToKitchen,\r\n                date: new Date().getTime()\r\n            }\r\n        ]);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.sendOrder}>Enviar a Cocina</button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SendToKitchen","import React, { Component } from 'react';\r\n\r\nclass Total extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalCount: 0\r\n        }\r\n    }\r\n    total(price) {\r\n        console.log(price)\r\n        return price\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log('order: ' + this.props.order)\r\n        this.props.order.map(item => {\r\n            console.log('item: ' + item)\r\n            console.log('item.price: ' + item.price)\r\n            /* return ( this.total( item.price)) */\r\n        });\r\n        const totalAmount = this.total\r\n        //console.log(this.props.order)\r\n\r\n        const total = 'hola'\r\n        return (\r\n            <div>\r\n                <h3 >Total: {this.state.totalCount} </h3>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Total","import React, { Component } from 'react';\r\nimport SendToKitchen from './SendToKitchen'\r\n\r\n\r\nclass Ticket extends Component {\r\n \r\n    render(props) {\r\n        \r\n           \r\n        return (\r\n            <div>\r\n                <button   onClick={this.props.deletefunction()}>Eliminar</button>\r\n              \r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Ticket","import React, { Component } from 'react';\r\nimport SendToKitchen from './SendToKitchen'\r\nimport DeleteTicketItem from './DeleteTicketItem'\r\nimport Total from './Total'\r\n\r\n\r\nclass Ticket extends Component {\r\n\r\n    render() {\r\n        const newOrder = this.props.order\r\n        const newTicket =\r\n            newOrder.map(order =>\r\n\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <span>1</span>\r\n                        {order.item}\r\n                        ${order.price}\r\n                        <button onClick={() => this.props.deleteItem(order.id)}>Eliminar</button>\r\n                    </li>\r\n                </ul>)\r\n        return (\r\n            <div>\r\n                {newTicket}\r\n                <Total order={this.props.order} />\r\n                <SendToKitchen SendToKitchen={this.props.order} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Ticket","import React, { Component } from 'react';\r\nimport './style.css'\r\nimport firebase from './Firebase/firebase';\r\nimport Ticket from './Ticket'\r\n\r\n\r\nclass Waitress extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuButtons: [],\r\n            order: [],\r\n            morning: 'morningMenu',\r\n            dinner: 'dinnerMenu',\r\n            menuSelected: 'morningMenu'\r\n        }\r\n        this.submitItem = this.submitItem.bind(this);\r\n    }\r\n\r\n    chooseMenu = (menu) => {\r\n        if (menu == 'morningMenu') {\r\n            this.setState({\r\n                menuSelected: 'morningMenu'\r\n            }, () => {\r\n                const dbRef = firebase.database().ref();\r\n                const menuRef = dbRef.child(this.state.menuSelected);\r\n                menuRef.on('value', snap => {\r\n                    this.setState({\r\n                        menuButtons: snap.val()\r\n                    })\r\n                });\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                menuSelected: 'dinnerMenu'\r\n            }, () => {\r\n                const dbRef = firebase.database().ref();\r\n                const menuRef = dbRef.child(this.state.menuSelected);\r\n                menuRef.on('value', snap => {\r\n                    this.setState({\r\n                        menuButtons: snap.val()\r\n                    })\r\n                });\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const dbRef = firebase.database().ref();\r\n        const menuRef = dbRef.child('morningMenu');\r\n        menuRef.on('value', snap => {\r\n            this.setState({\r\n                menuButtons: snap.val()\r\n            })\r\n        });\r\n    }\r\n\r\n    submitItem(item, price, img, id) {\r\n        const newItem = {\r\n            item: item,\r\n            price: price,\r\n            img: img,\r\n            id: id\r\n        }\r\n        this.setState({\r\n            order: [...this.state.order, newItem]\r\n        })\r\n    }\r\n\r\n    deleteItem = value => {\r\n        let orderIndex = this.state.order.findIndex(item => {\r\n            return item.id === value\r\n        })\r\n        if (orderIndex > -1) {\r\n            this.setState({\r\n                order: [...this.state.order.slice(0, orderIndex), ...this.state.order.slice(orderIndex + 1, this.state.order.length)]\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const menuBtn = this.state.menuButtons.map(menuItem => {\r\n            return (\r\n                <button\r\n                    key={menuItem.id}\r\n                    onClick={() => { this.submitItem(menuItem.item, menuItem.price, menuItem.img, menuItem.id); }}\r\n                    type=\"submit\">\r\n                    {menuItem.item} \r\n                    {/* <img src={menuItem.img}></img> */}\r\n                </button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <section className=\"choose-menu\">\r\n                    <button onClick={() => this.chooseMenu(this.state.morning)}>Menu de Dia</button>\r\n                    <button onClick={() => this.chooseMenu(this.state.dinner)}>Menu de Cena</button>\r\n                </section>\r\n                <section className=\"menu-buttons\">\r\n                    {menuBtn}\r\n                </section>\r\n                <section className=\"ticket\"></section>\r\n                <Ticket\r\n                    order={this.state.order}\r\n                    deleteItem={this.deleteItem} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Waitress;\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass DinnerMenu extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <div >\r\n             Menu de Noche\r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DinnerMenu;\r\n\r\n/* \r\nimport React, { Component } from 'react';\r\nimport './style.css'\r\n\r\nimport firebase from './Firebase/firebase';\r\n\r\nclass DinnerMenu extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dinMenu: '',\r\n            order: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const dbRef = firebase.database().ref();\r\n        const dinMenuRef = dbRef.child('dinnerMenu');\r\n        dinMenuRef.on('value', snap => {\r\n            this.setState({\r\n                dinMenu: snap.val()\r\n            })\r\n        });\r\n\r\n\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        if (Array.isArray(this.state.dinMenu)) {\r\n            \r\n            return (\r\n                <section> {\r\n                    this.state.dinMenu.map((menuItem, i) => \r\n                    <button \r\n                    className={i}\r\n                    key={menuItem.id}\r\n                    onClick={this.writeOrder}\r\n                    >\r\n                        {menuItem.item}\r\n                    </button>)\r\n                } </section>                \r\n            )\r\n        }\r\n        return (\r\n          'Loading...'\r\n        )\r\n    }\r\n}\r\n\r\nexport default DinnerMenu;\r\n */","import React, { Component } from 'react';\r\nimport './style.css'\r\nimport firebase from './Firebase/firebase';\r\n\r\n\r\n\r\nclass Kitchen extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            order: '',\r\n           \r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        function snapshotToArray(snapshot) {\r\n            var returnArr = [];\r\n        \r\n            snapshot.forEach(function(childSnapshot) {\r\n                var item = childSnapshot.val();\r\n                item.key = childSnapshot.key;\r\n        \r\n                returnArr.push(item);\r\n            });\r\n        \r\n            return returnArr;\r\n        };\r\n        \r\n        const dbRefOrder = firebase.database().ref();\r\n        const orderRef = dbRefOrder.child('order');\r\n        orderRef.on('value', snap => {\r\n            const OrdersLikeArray = snapshotToArray(snap)\r\n            this.setState({\r\n                order: OrdersLikeArray\r\n            })\r\n        });\r\n    }\r\n\r\n    delete(key){\r\n        console.log(key)\r\n     /*    const dbRefOrder = firebase.database().ref();\r\n        const orderRef = dbRefOrder.child('order')\r\n        orderRef.map(item=>{\r\n            console.log(item.key)\r\n        }) */\r\n         console.log('delete')\r\n         const dbRefOrder = firebase.database().ref();\r\n        const orderRef = dbRefOrder.child('order').child(key);\r\n        orderRef.remove() \r\n    }\r\n    \r\n    render() {\r\n        if (Array.isArray(this.state.order)) {\r\n            \r\n     /*        this.state.order.map(item=>{\r\n     \r\n             console.log(item.key)}) */\r\n            return (\r\n                <section> { \r\n                    this.state.order.map((orders, i) => \r\n                    <div class=\"card\" > \r\n                        <h5 class=\"card-title\">Orden no. {i}</h5>\r\n                        {orders[0].orden.map((items, i) =>\r\n                        <p> {items.item}\r\n                        </p>)\r\n                        }\r\n                    <button onClick={()=>this.delete(orders.key)}>¡Terminado!</button>\r\n                    </div>)\r\n                } </section>                \r\n            )\r\n        }\r\n        return (\r\n          'Loading...'\r\n        )\r\n    }\r\n}\r\n\r\nexport default Kitchen;","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Navigation from './components/Navbar'\r\nimport Waitress from './components/Waitress'\r\nimport DinnerMenu from './components/DinnerMenu'\r\nimport Kitchen from './components/Kitchen';\r\nimport Pruebasfirebase from './components/pruebasfirebase';\r\n\r\nclass App extends Component {\r\n  state = {\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <h1>Burger Queen</h1>\r\n          <Route path=\"/\" component={Navigation} />\r\n          <Route path=\"/Meseros\" exact strict component={Waitress} />\r\n          <Route path=\"/MenuComida\" exact strict component={DinnerMenu} />\r\n          <Route path=\"/Cocina\" exact strict component={Kitchen} />\r\n  {/*         <Route path=\"/MenuDesayuno\" exact strict component={Ticket} />\r\n          <Route path=\"/MenuComida\" exact strict component={Ticket} /> */}\r\n{/* <Pruebasfirebase></Pruebasfirebase> */}\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport firebase from 'firebase';\r\nimport {database} from './Firebase/firebase';\r\n\r\nclass Pruebasfirebase extends Component{\r\n    constructor (){\r\n        super()\r\n        this.state = {\r\n            speed: 'prueba firbease'\r\n        }\r\n    }\r\n       componentDidMount(){\r\n           //READ\r\n        const dbRef = firebase.database().ref();\r\n        const speedRef = dbRef.child('morningMenu');\r\n        speedRef.on('value', snap =>{\r\n            this.setState({\r\n                speed: snap.val()\r\n            })\r\n        });\r\n\r\n        //CREATE\r\n        const dbRefOrder = firebase.database().ref();\r\n        const orderRef = dbRefOrder.child('pruebasFirebase');\r\n        orderRef.set([\r\n            \r\n                {\"dinnerMenu\" : [ {\r\n                  \"id\" : \"hamSim\",\r\n                  \"img\" : \"https://sifu.unileversolutions.com/image/es-MX/recipe-topvisual/2/1260-709/hamburguesa-clasica-50425188.jpg\",\r\n                  \"item\" : \"Hamburguesa Simple\",\r\n                  \"price\" : 10\r\n                }, {\r\n                  \"id\" : \"hamDob\",\r\n                  \"img\" : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTXPGR7LlhS7WscHDIu4WiRDcq5cBTgNfHT5Pwe1s9M0Inz4Ozvaw\",\r\n                  \"item\" : \"Hamburguesa Doble\",\r\n                  \"price\" : 15\r\n                }, {\r\n                  \"id\" : \"papas\",\r\n                  \"img\" : \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/67/Fries_2.jpg/1200px-Fries_2.jpg\",\r\n                  \"item\" : \"Papas Fritas\",\r\n                  \"price\" : 5\r\n                }, {\r\n                  \"id\" : \"cebolla\",\r\n                  \"img\" : \"https://static.guiainfantil.com/pictures/recetas2/44000/44822-4-aros-de-cebolla-rebozados-receta-casera-para-ninos.jpg\",\r\n                  \"item\" : \"Aros de Cebolla\",\r\n                  \"price\" : 15\r\n                }, {\r\n                  \"id\" : \"agua500\",\r\n                  \"img\" : \"https://super.walmart.com.mx/images/product-images/img_large/00750179164998L.jpg\",\r\n                  \"item\" : \"Agua 500 ml\",\r\n                  \"price\" : 5\r\n                }, {\r\n                  \"id\" : \"agua700\",\r\n                  \"img\" : \"https://www.chedraui.com.mx/medias/758104100422-00-CH515Wx515H?context=bWFzdGVyfHJvb3R8NDc3NjB8aW1hZ2UvanBlZ3xoZWMvaDkyLzkyMzI5NzY1MTEwMDYuanBnfGE2NTQ5MGZhYmQzOWE0MDc4ZDk1MGQxZGMwMGMyMGQ1ZDg0NDYzOTU1ZGMyZTg0MjFmNmM5MjY4ZmE3MTQ1YjE\",\r\n                  \"item\" : \"Agua 750 ml\",\r\n                  \"price\" : 7\r\n                }, {\r\n                  \"id\" : \"bebida500\",\r\n                  \"img\" : \"https://super.walmart.com.mx/images/product-images/img_large/00000007500980L.jpg\",\r\n                  \"item\" : \"Bebida/Gaseosa 500ml\",\r\n                  \"price\" : 7\r\n                }, {\r\n                  \"id\" : \"bebida750\",\r\n                  \"img\" : \"http://4.imimg.com/data4/UK/MS/GLADMIN-2/coca-cola-cold-drink-500x500.jpg\",\r\n                  \"item\" : \"Bebida/Gaseosa 750ml\",\r\n                  \"price\" : 10\r\n                } ]},{\r\n                \"morningMenu\" : [ {\r\n                  \"id\" : \"cafe\",\r\n                  \"img\" : \"http://us.coffee/assets/img/taza.png\",\r\n                  \"item\" : \"Café Americano\",\r\n                  \"price\" : 5\r\n                }, {\r\n                  \"id\" : \"cafeleche\",\r\n                  \"img\" : \"https://img2.freepng.es/20171216/161/cup-coffee-png-5a34b7187c6386.5299433215134041845095.jpg\",\r\n                  \"item\" : \"Café con leche\",\r\n                  \"price\" : 7\r\n                }, {\r\n                  \"id\" : \"sandwich\",\r\n                  \"img\" : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRocK_G9r8jPwMTeZ0hWMsiqkJISYvBOt54767OMLTvdlKuzgcfsA\",\r\n                  \"item\" : \"Sandwich de jamón y queso\",\r\n                  \"price\" : 10\r\n                }, {\r\n                  \"id\" : \"jugo\",\r\n                  \"img\" : \"http://www.1001consejos.com/wp-content/uploads/2014/10/vaso-de-zumo-de-durazno.png\",\r\n                  \"item\" : \"Jugo de frutas natural\",\r\n                  \"price\" : 7\r\n                } ]\r\n            }\r\n              \r\n              \r\n       ]);\r\n    }\r\n\r\n    render(){\r\n        if (Array.isArray(this.state.speed)) {\r\n            return(\r\n                <div >\r\n                    <h1>{this.state.speed.map(menuItem => <p>{menuItem.item}</p>)}</h1>\r\n                  </div>\r\n            )\r\n        }\r\n        return \"Loading..\";\r\n\r\n    }\r\n}\r\n\r\nexport default Pruebasfirebase;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n/* import * as firebase from 'firebase';\r\n\r\n\r\n\r\n  \r\n  const auth = firebase.auth();\r\n  const database = firebase.database();\r\n\r\n  export {\r\n    auth,\r\n    database,\r\n  }; */\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}