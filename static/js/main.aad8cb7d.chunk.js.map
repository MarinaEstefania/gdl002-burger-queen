{"version":3,"sources":["components/Navbar.js","components/Firebase/firebase.js","components/SendToKitchen.js","components/Total.js","components/Ticket.js","components/Waitress.js","components/Kitchen.js","App.js","components/Name.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","react_router_dom","to","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","appId","SendToKitchen","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sendOrder","bind","assertThisInitialized","database","ref","child","push","orden","date","moment","format","waitressName","eraseOrder","type","onClick","Total","totalLikeArray","suma","map","item","price","amount","total","order","Ticket","putWaitressName","event","preventDefault","value","target","setState","state","_this2","newTicket","deleteItem","id","href","placeholder","waitressNameInput","onChange","components_Total","components_SendToKitchen","Waitress","chooseMenu","menu","menuSelected","on","snap","menuButtons","val","submitItem","img","newItem","concat","toConsumableArray","forEach","i","orderIndex","findIndex","slice","length","morning","dinner","_this3","menuBtn","menuItem","defineProperty","key","alt","src","components_Ticket","Kitchen","OrdersLikeArray","snapshot","returnArr","childSnapshot","snapshotToArray","remove","Array","isArray","orders","items","delete","App","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aad8cb7d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style/style.css\";\r\nimport \"./style/personalStyle.css\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbars navbar-expand-sm navbar-dark bg-primary\">\r\n          <ul className=\"navbar-nav\">\r\n            {/*  <li className=\"nav-item\"> \r\n                       <Link className=\"navbar-brand\"  to=\"inicio\">  Inicio | </Link>\r\n                       </li> */}\r\n            <li className=\"nav-item\">\r\n              <Link className=\"navbar-brand\" to=\"tomar-orden\">\r\n                Tomar orden |{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"navbar-brand\" to=\"Cocina\">\r\n                Cocina |\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import firebase from \"firebase\";\r\n\r\n//Web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB_yVvrnR9-W9DbbxVi2yx53O49jL4wPaM\",\r\n  authDomain: \"burger-queen-gdl002.firebaseapp.com\",\r\n  databaseURL: \"https://burger-queen-gdl002.firebaseio.com\",\r\n  projectId: \"burger-queen-gdl002\",\r\n  appId: \"1:14744371401:web:b161951d0904c8ce\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase/firebase\";\r\nimport moment from \"moment\";\r\n\r\nclass SendToKitchen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sendOrder = this.sendOrder.bind(this);\r\n  }\r\n\r\n  sendOrder() {\r\n    const dbRefOrder = firebase.database().ref();\r\n    const orderRef = dbRefOrder.child(\"order\");\r\n    orderRef.push([\r\n      {\r\n        orden: this.props.SendToKitchen,\r\n        date: moment().format(\"lll\"),\r\n        waitressName: this.props.waitressName\r\n      }\r\n    ]);\r\n\r\n    this.props.eraseOrder();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning btn-send-kitchen\"\r\n          onClick={this.sendOrder}\r\n        >\r\n          Enviar a Cocina\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SendToKitchen;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Total extends Component {\r\n  total(totalLikeArray) {\r\n    let suma = 0;\r\n    //console.log(totalLikeArray)\r\n    totalLikeArray.map(item => {\r\n      suma = suma + item.price * (item.amount + 1);\r\n      return suma;\r\n    });\r\n    return suma;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"total\">Total: {this.total(this.props.order)} </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Total;\r\n","import React, { Component } from \"react\";\r\nimport SendToKitchen from \"./SendToKitchen\";\r\nimport Total from \"./Total\";\r\n\r\nclass Ticket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      waitressName: \"\"\r\n    };\r\n  }\r\n  putWaitressName = event => {\r\n    event.preventDefault();\r\n\r\n    //console.log(event.target.waitressNameInput)\r\n    let value = event.target.value;\r\n    this.setState({\r\n      waitressName: value\r\n    });\r\n  };\r\n  render() {\r\n    const waitressName = this.state.waitressName;\r\n    //  console.log(waitressName)\r\n    const newOrder = this.props.order;\r\n    const newTicket = newOrder.map(order => (\r\n      <table className=\"list-group\">\r\n        <tr className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n          <td className=\"badge badge-primary badge-pill order-amount\">\r\n            {\" \"}\r\n            {order.amount + 1}\r\n          </td>\r\n          <td className=\"td-item\">{order.item}</td>\r\n          <td className=\"order-price badge badge-secundary badge-pill\">\r\n            {\" \"}\r\n            ${order.price}.00\r\n          </td>\r\n          <td className=\"order-delete\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-sm btn-danger\"\r\n              onClick={() => this.props.deleteItem(order.id)}\r\n            >\r\n              X\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    ));\r\n    return (\r\n      <div>\r\n        <form>\r\n          <p href=\"#\" className=\"list-group-item list-group-item-action active\">\r\n            Mesero:\r\n            <input\r\n              className=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Nombre\"\r\n              waitressNameInput={waitressName}\r\n              onChange={this.putWaitressName}\r\n            />\r\n          </p>\r\n        </form>\r\n        {newTicket}\r\n        <Total order={this.props.order} />\r\n        <SendToKitchen\r\n          SendToKitchen={this.props.order}\r\n          waitressName={waitressName}\r\n          eraseOrder={this.props.eraseOrder}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ticket;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase/firebase\";\r\nimport Ticket from \"./Ticket\";\r\nimport \"./style/style.css\";\r\n\r\nclass Waitress extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menuButtons: [],\r\n      order: [],\r\n      morning: \"morningMenu\",\r\n      dinner: \"dinnerMenu\",\r\n      menuSelected: \"morningMenu\"\r\n    };\r\n    // this.submitItem = this.submitItem.bind(this);\r\n  }\r\n\r\n  chooseMenu = menu => {\r\n    if (menu == \"morningMenu\") {\r\n      this.setState(\r\n        {\r\n          menuSelected: \"morningMenu\"\r\n        },\r\n        () => {\r\n          const dbRef = firebase.database().ref();\r\n          const menuRef = dbRef.child(this.state.menuSelected);\r\n          menuRef.on(\"value\", snap => {\r\n            this.setState({\r\n              menuButtons: snap.val()\r\n            });\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState(\r\n        {\r\n          menuSelected: \"dinnerMenu\"\r\n        },\r\n        () => {\r\n          const dbRef = firebase.database().ref();\r\n          const menuRef = dbRef.child(this.state.menuSelected);\r\n          menuRef.on(\"value\", snap => {\r\n            this.setState({\r\n              menuButtons: snap.val()\r\n            });\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref();\r\n    const menuRef = dbRef.child(\"morningMenu\");\r\n    menuRef.on(\"value\", snap => {\r\n      this.setState({\r\n        menuButtons: snap.val()\r\n      });\r\n    });\r\n  }\r\n\r\n  submitItem = (item, price, img, id) => {\r\n    const newItem = {\r\n      item: item,\r\n      price: price,\r\n      img: img,\r\n      id: id,\r\n      amount: 0\r\n    };\r\n    this.setState({\r\n      order: [...this.state.order, newItem]\r\n    });\r\n\r\n    this.state.order.forEach(i => {\r\n      if (newItem.id == i.id) {\r\n        newItem.amount = i.amount + 1;\r\n      }\r\n    });\r\n\r\n    let orderIndex = this.state.order.findIndex(i => {\r\n      return i.id == newItem.id;\r\n    });\r\n\r\n    if (orderIndex > -1) {\r\n      this.setState({\r\n        order: [\r\n          ...this.state.order.slice(0, orderIndex),\r\n          ...this.state.order.slice(orderIndex + 1, this.state.order.length),\r\n          newItem\r\n        ]\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteItem = value => {\r\n    let orderIndex = this.state.order.findIndex(item => {\r\n      return item.id === value;\r\n    });\r\n    if (orderIndex > -1) {\r\n      this.setState({\r\n        order: [\r\n          ...this.state.order.slice(0, orderIndex),\r\n          ...this.state.order.slice(orderIndex + 1, this.state.order.length)\r\n        ]\r\n      });\r\n    }\r\n  };\r\n\r\n  eraseOrder = () => {\r\n    // console.log('EnteringToEraseOrder')\r\n    this.setState({\r\n      order: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const menuBtn = this.state.menuButtons.map(menuItem => {\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-lg btn-primary btn-item\"\r\n          key={menuItem.id}\r\n          onClick={() => {\r\n            this.submitItem(\r\n              menuItem.item,\r\n              menuItem.price,\r\n              menuItem.img,\r\n              menuItem.id\r\n            );\r\n          }}\r\n          type=\"submit\"\r\n        >\r\n          {menuItem.item}\r\n          <img className=\"img\" alt={menuItem.item} src={menuItem.img} />\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <section className=\"waitress row\">\r\n        <div className=\"menues-section\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning btn-lg choose-menu-btn\"\r\n            onClick={() => this.chooseMenu(this.state.morning)}\r\n          >\r\n            Menu Desayunos\r\n          </button>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning btn-lg choose-menu-btn\"\r\n            onClick={() => this.chooseMenu(this.state.dinner)}\r\n          >\r\n            Menu Comidas\r\n          </button>\r\n        </div>\r\n\r\n        <section className=\"menuBtns-and-ticket row\">\r\n          <section className=\"menu-buttons col-sm-12 col-md-7 alert alert-dismissible alert-secondary\">\r\n            {menuBtn}\r\n          </section>\r\n          <section className=\"ticket col-sm-12 col-md-5\">\r\n            <Ticket\r\n              eraseOrder={this.eraseOrder}\r\n              order={this.state.order}\r\n              deleteItem={this.deleteItem}\r\n            />\r\n          </section>\r\n        </section>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Waitress;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase/firebase\";\r\nimport \"./style/style.css\";\r\n\r\nclass Kitchen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      order: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    function snapshotToArray(snapshot) {\r\n      var returnArr = [];\r\n\r\n      snapshot.forEach(function(childSnapshot) {\r\n        var item = childSnapshot.val();\r\n        item.key = childSnapshot.key;\r\n\r\n        returnArr.push(item);\r\n      });\r\n\r\n      return returnArr;\r\n    }\r\n\r\n    const dbRefOrder = firebase.database().ref();\r\n    const orderRef = dbRefOrder.child(\"order\");\r\n    orderRef.on(\"value\", snap => {\r\n      const OrdersLikeArray = snapshotToArray(snap);\r\n      this.setState({\r\n        order: OrdersLikeArray\r\n      });\r\n    });\r\n  }\r\n\r\n  delete(key) {\r\n    const dbRefOrder = firebase.database().ref();\r\n    const orderRef = dbRefOrder.child(\"order\").child(key);\r\n    orderRef.remove();\r\n  }\r\n\r\n  render() {\r\n    if (Array.isArray(this.state.order)) {\r\n      /*        this.state.order.map(item=>{\r\n            \r\n                    console.log(item.key)}) */\r\n      return (\r\n        <section className=\"row kitchen-section\">\r\n          {\" \"}\r\n          {this.state.order.map((orders, i) => (\r\n            <div className=\"card text-white bg-primary mb-3 kitchen-order\">\r\n              <div className=\"card-header\">\r\n                {\" \"}\r\n                <h5 className=\"card-title\">Orden no. {i + 1}</h5>{\" \"}\r\n                <h6>{orders[0].date}</h6> Mesero: {orders[0].waitressName}\r\n              </div>\r\n              <div className=\"card-body\">\r\n                {orders[0].orden.map((items, i) => (\r\n                  <h5 className=\"card-text\">\r\n                    <span className=\"badge badge-primary badge-pill\">\r\n                      {\" \"}\r\n                      {items.amount + 1}\r\n                    </span>\r\n                    {items.item}\r\n                  </h5>\r\n                ))}\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-terminado btn btn-secondary\"\r\n                onClick={() => this.delete(orders.key)}\r\n              >\r\n                Eliminar Pedido\r\n              </button>\r\n            </div>\r\n          ))}{\" \"}\r\n        </section>\r\n      );\r\n    }\r\n    return \"Loading...\";\r\n  }\r\n}\r\n\r\nexport default Kitchen;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Navigation from \"./components/Navbar\";\r\nimport Waitress from \"./components/Waitress\";\r\nimport Kitchen from \"./components/Kitchen\";\r\nimport Name from \"./components/Name\";\r\n/* import Pruebasfirebase from './components/pruebasfirebase'; */\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Route path=\"/\" component={Navigation} />\r\n          {/*         <Route path=\"/inicio\" component={Name} /> */}\r\n          <Route exact path=\"/tomar-orden\" component={Waitress} />\r\n          <Route path=\"/cocina\" component={Kitchen} />\r\n          {/* <Pruebasfirebase></Pruebasfirebase> */}\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport \"./style/style.css\";\r\nimport \"./style/personalStyle.css\";\r\n\r\nclass Name extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullName: \"\"\r\n    };\r\n  }\r\n  submitName = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  inputCange = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      [event.target.name]: event.targer.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { fullName } = this.state;\r\n    return (\r\n      <div className=\"inicio\">\r\n        <h3>Bienvenid@,</h3>\r\n        <h5>Ingresa tu nombre</h5>\r\n        <p>{fullName} </p>\r\n        <form onSubmit={this.submitName}>\r\n          <input\r\n            type=\"text\"\r\n            className=\" inputName\"\r\n            placeholder=\"Nombre\"\r\n            name=\"fullName\"\r\n            onChange={this.inputCange}\r\n          />\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Enviar\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Name;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}