{"version":3,"sources":["components/Navbar.js","components/Firebase/firebase.js","components/SendToKitchen.js","components/Total.js","components/Ticket.js","components/Waitress.js","components/Kitchen.js","App.js","components/Name.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","react_router_dom","to","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","appId","SendToKitchen","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sendOrder","bind","assertThisInitialized","database","ref","child","push","orden","date","moment","format","waitressName","eraseOrder","type","onClick","Total","totalLikeArray","suma","map","item","price","amount","total","order","Ticket","putWaitressName","event","preventDefault","value","target","setState","state","_this2","newTicket","class","deleteItem","id","href","placeholder","waitressNameInput","onChange","components_Total","components_SendToKitchen","Waitress","chooseMenu","menu","menuSelected","on","snap","menuButtons","val","submitItem","img","newItem","concat","toConsumableArray","forEach","i","orderIndex","findIndex","slice","length","morning","dinner","_this3","menuBtn","menuItem","defineProperty","key","alt","src","components_Ticket","Kitchen","OrdersLikeArray","snapshot","returnArr","childSnapshot","snapshotToArray","remove","Array","isArray","orders","items","delete","App","react_router","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0855e71e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './style/style.css';\r\nimport './style/personalStyle.css';\r\n\r\nclass Navigation extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"Navbar\" >\r\n                 <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                     \r\n                   <ul className=\"navbar-nav mr-auto\">\r\n                  {/*  <li className=\"nav-item\"> \r\n                       <Link className=\"navbar-brand\"  to=\"inicio\">  Inicio | </Link>\r\n                       </li> */}\r\n                      <li className=\"nav-item\"> \r\n                       <Link className=\"navbar-brand\"  to=\"tomar-orden\">Tomar orden | </Link>\r\n                       </li>\r\n                      <li className=\"nav-item\"> \r\n                       <Link className=\"navbar-brand\"  to=\"Cocina\">Cocina |</Link>\r\n                       </li>\r\n                    </ul>\r\n                </nav>\r\n                \r\n               \r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import firebase from 'firebase';\r\n\r\n//Web app's Firebase configuration\r\n const firebaseConfig = {\r\n    apiKey: \"AIzaSyB_yVvrnR9-W9DbbxVi2yx53O49jL4wPaM\",\r\n    authDomain: \"burger-queen-gdl002.firebaseapp.com\",\r\n    databaseURL: \"https://burger-queen-gdl002.firebaseio.com\",\r\n    projectId: \"burger-queen-gdl002\",\r\n/*     storageBucket: \"burger-queen-gdl002.appspot.com\",\r\n    messagingSenderId: \"14744371401\", */\r\n    appId: \"1:14744371401:web:b161951d0904c8ce\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export default firebase;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport firebase from './Firebase/firebase';\r\nimport moment from 'moment';\r\n\r\nclass SendToKitchen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.sendOrder = this.sendOrder.bind(this)\r\n    }\r\n\r\n    sendOrder() {\r\n        const dbRefOrder = firebase.database().ref();\r\n        const orderRef = dbRefOrder.child('order');\r\n        orderRef.push([\r\n            {\r\n                orden: this.props.SendToKitchen,\r\n                date: moment().format('lll'),\r\n                waitressName: this.props.waitressName\r\n            }\r\n        ]);\r\n\r\n        this.props.eraseOrder()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button type=\"button\" className=\"btn btn-warning btn-send-kitchen\"\r\n                    onClick={this.sendOrder}/* {this.props.eraseOrder} */\r\n                 /* {this.sendOrder} */>\r\n                    Enviar a Cocina\r\n                </button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SendToKitchen","import React, { Component } from 'react';\r\n\r\nclass Total extends Component {\r\n    \r\n\r\ntotal(totalLikeArray){\r\n    let suma = 0\r\n        //console.log(totalLikeArray)\r\n     totalLikeArray.map(item=>{\r\n         suma = suma + (item.price*(item.amount + 1))\r\n        return  suma\r\n     })\r\n    return suma\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 >Total: {this.total(this.props.order)} </h3>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Total","import React, { Component } from 'react';\r\nimport SendToKitchen from './SendToKitchen'\r\nimport Total from './Total'\r\n\r\n\r\nclass Ticket extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            waitressName: ''\r\n        }\r\n    }\r\n    putWaitressName = (event) => {\r\n        event.preventDefault()\r\n\r\n        //console.log(event.target.waitressNameInput)\r\n        let value = event.target.value\r\n        this.setState({\r\n            waitressName: value\r\n        })\r\n    }\r\n    render() {\r\n        const waitressName = this.state.waitressName\r\n      //  console.log(waitressName)\r\n        const newOrder = this.props.order\r\n        const newTicket =\r\n            newOrder.map(order =>\r\n\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                       <span class=\"badge badge-primary badge-pill\"> {order.amount+1}</span>\r\n                        {order.item}\r\n                        <span class=\"badge badge-secundary badge-pill\"> ${order.price}.00</span>\r\n                        <button type=\"button\" class=\"btn btn-primary btn-sm btn-danger\"\r\n                            onClick={() => this.props.deleteItem(order.id)}>X</button>\r\n                    </li>\r\n                </ul>)\r\n        return (\r\n            <div >\r\n                <form>\r\n                    <p href=\"#\" className=\"list-group-item list-group-item-action active\">\r\n                        Mesero:\r\n                        <input type='text'\r\n                            placeholder='Nombre'\r\n                            waitressNameInput={waitressName}\r\n                            onChange={this.putWaitressName} />\r\n                    </p>\r\n\r\n                </form>\r\n                {newTicket}\r\n                <Total order={this.props.order} />\r\n                <SendToKitchen\r\n                    SendToKitchen={this.props.order}\r\n                    waitressName={waitressName}\r\n                    eraseOrder={this.props.eraseOrder} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Ticket","import React, { Component } from 'react';\r\nimport firebase from './Firebase/firebase';\r\nimport Ticket from './Ticket'\r\nimport './style/style.css';\r\n\r\nclass Waitress extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuButtons: [],\r\n            order: [],\r\n            morning: 'morningMenu',\r\n            dinner: 'dinnerMenu',\r\n            menuSelected: 'morningMenu'\r\n        }\r\n        // this.submitItem = this.submitItem.bind(this);\r\n    }\r\n\r\n    chooseMenu = (menu) => {\r\n        if (menu == 'morningMenu') {\r\n            this.setState({\r\n                menuSelected: 'morningMenu'\r\n            }, () => {\r\n                const dbRef = firebase.database().ref();\r\n                const menuRef = dbRef.child(this.state.menuSelected);\r\n                menuRef.on('value', snap => {\r\n                    this.setState({\r\n                        menuButtons: snap.val()\r\n                    })\r\n                });\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.setState({\r\n                menuSelected: 'dinnerMenu'\r\n            }, () => {\r\n                const dbRef = firebase.database().ref();\r\n                const menuRef = dbRef.child(this.state.menuSelected);\r\n                menuRef.on('value', snap => {\r\n                    this.setState({\r\n                        menuButtons: snap.val()\r\n                    })\r\n                });\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const dbRef = firebase.database().ref();\r\n        const menuRef = dbRef.child('morningMenu');\r\n        menuRef.on('value', snap => {\r\n            this.setState({\r\n                menuButtons: snap.val()\r\n            })\r\n        });\r\n    }\r\n\r\n    submitItem = (item, price, img, id) => {\r\n        const newItem = {\r\n            item: item,\r\n            price: price,\r\n            img: img,\r\n            id: id,\r\n            amount: 0\r\n        }\r\n        this.setState({\r\n            order: [...this.state.order, newItem]\r\n        })\r\n\r\n        this.state.order.forEach((i) => {\r\n            if (newItem.id == i.id) {\r\n                newItem.amount = i.amount + 1\r\n            }\r\n        })\r\n\r\n        let orderIndex = this.state.order.findIndex(i => {\r\n            return i.id == newItem.id\r\n        })\r\n\r\n        if (orderIndex > -1) {\r\n            this.setState({\r\n                order: [...this.state.order.slice(0, orderIndex), ...this.state.order.slice(orderIndex + 1, this.state.order.length), newItem]\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteItem = value => {\r\n        let orderIndex = this.state.order.findIndex(item => {\r\n            return item.id === value\r\n        })\r\n        if (orderIndex > -1) {\r\n            this.setState({\r\n                order: [...this.state.order.slice(0, orderIndex), ...this.state.order.slice(orderIndex + 1, this.state.order.length)]\r\n            })\r\n        }\r\n    }\r\n\r\n    eraseOrder = () => {\r\n        // console.log('EnteringToEraseOrder')\r\n        this.setState({\r\n            order: []\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const menuBtn = this.state.menuButtons.map(menuItem => {\r\n            return (\r\n                <button type=\"button\" class=\"btn btn-lg btn-primary btn-item col-4\"\r\n                    key={menuItem.id}\r\n                    onClick={() => { this.submitItem(menuItem.item, menuItem.price, menuItem.img, menuItem.id); }}\r\n                    type=\"submit\">\r\n                    {menuItem.item}\r\n                    <img className=\"img\" alt={menuItem.item} src={menuItem.img} />\r\n                </button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"waitress row\">\r\n\r\n\r\n                <section className=\"morningMenu\">\r\n                    <button type=\"button\" class=\"btn btn-warning btn-lg btn-block choose-menu-btn\"\r\n                        onClick={() => this.chooseMenu(this.state.morning)}>\r\n                        Menu Desayunos\r\n                    </button>\r\n                </section>\r\n                <section className=\"dinnerMenu\">\r\n                    <button type=\"button\" class=\"btn btn-warning btn-lg btn-block choose-menu-btn\"\r\n                        onClick={() => this.chooseMenu(this.state.dinner)}>\r\n                        Menu Comidas\r\n                    </button>\r\n                </section>\r\n\r\n                <div className=\"menuBtns-and-ticket row\">\r\n                    <section className=\"menu-buttons col-5 row alert alert-dismissible alert-secondary\">\r\n                        {menuBtn}\r\n                    </section>\r\n                    <section className=\"ticket col-5 \">\r\n                        <Ticket\r\n                            eraseOrder={this.eraseOrder}\r\n                            order={this.state.order}\r\n                            deleteItem={this.deleteItem} />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Waitress;","import React, { Component } from 'react';\r\nimport firebase from './Firebase/firebase';\r\nimport './style/style.css';\r\n\r\nclass Kitchen extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            order: '',\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        function snapshotToArray(snapshot) {\r\n            var returnArr = [];\r\n\r\n            snapshot.forEach(function (childSnapshot) {\r\n                var item = childSnapshot.val();\r\n                item.key = childSnapshot.key;\r\n\r\n                returnArr.push(item);\r\n            });\r\n\r\n            return returnArr;\r\n        };\r\n\r\n        const dbRefOrder = firebase.database().ref();\r\n        const orderRef = dbRefOrder.child('order');\r\n        orderRef.on('value', snap => {\r\n            const OrdersLikeArray = snapshotToArray(snap)\r\n            this.setState({\r\n                order: OrdersLikeArray\r\n            })\r\n        });\r\n    }\r\n\r\n    delete(key) {\r\n        const dbRefOrder = firebase.database().ref();\r\n        const orderRef = dbRefOrder.child('order').child(key);\r\n        orderRef.remove()\r\n    }\r\n\r\n    render() {\r\n   \r\n        if (Array.isArray(this.state.order)) {\r\n\r\n            /*        this.state.order.map(item=>{\r\n            \r\n                    console.log(item.key)}) */\r\n            return (\r\n                <section className=\"row \"> {\r\n                    this.state.order.map((orders, i) =>\r\n                        <div className=\"card text-white bg-primary mb-3 kitchen-order\" >\r\n                            <div className=\"card-header\">  <h5 class=\"card-title\">Orden no. {i+1}</h5> <h6>{orders[0].date}</h6> Mesero: {orders[0].waitressName}</div>\r\n                            <div class=\"card-body\">\r\n                            {orders[0].orden.map((items, i) =>\r\n                              \r\n                                <h5 className=\"card-text\">\r\n                                      <span class=\"badge badge-primary badge-pill\"> {items.amount+1}</span>\r\n                                       {items.item}\r\n                                </h5>)\r\n                            }\r\n                            <button className=\"btn-terminado btn btn-secondary\"\r\n                                onClick={() => this.delete(orders.key)}>\r\n                                ¡Orden Lista!\r\n                        </button></div>\r\n                        </div>)\r\n                } </section>\r\n            )\r\n        }\r\n        return (\r\n            'Loading...'\r\n        )\r\n    }\r\n}\r\n\r\nexport default Kitchen;","import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Navigation from './components/Navbar';\r\nimport Waitress from './components/Waitress';\r\nimport Kitchen from './components/Kitchen';\r\nimport Name from './components/Name'\r\n/* import Pruebasfirebase from './components/pruebasfirebase'; */\r\n\r\nclass App extends Component {\r\n  state = {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <h1></h1>\r\n          <Route path=\"/\" component={Navigation} />\r\n  {/*         <Route path=\"/inicio\" component={Name} /> */}\r\n          <Route exact path=\"/tomar-orden\" component={Waitress} />\r\n          <Route path=\"/cocina\" component={Kitchen} />\r\n          {/* <Pruebasfirebase></Pruebasfirebase> */}  \r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport './style/style.css';\r\nimport './style/personalStyle.css';\r\n\r\nclass Name extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            fullName: \"\"\r\n        }\r\n    }\r\n    submitName = (event) =>{\r\n        event.preventDefault()\r\n    }\r\n\r\n    inputCange = (event) =>{\r\n        event.preventDefault()\r\n        this.setState({\r\n            [event.target.name]: event.targer.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n            const {fullName} = this.state\r\n        return (\r\n            <div className=\"inicio\" >\r\n                <h3>Bienvenid@,</h3>\r\n                <h5>Ingresa tu nombre</h5>\r\n                <p>{fullName} </p>\r\n                <form onSubmit={this.submitName}>\r\n                    <input type=\"text\" className=\" inputName\" placeholder=\"Nombre\" name='fullName' onChange={this.inputCange}></input>\r\n                    <button type=\"button\" className=\"btn btn-primary\">Enviar</button>\r\n                    {/*  <img src={this.img}/> */}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Name;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}